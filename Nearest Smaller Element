public class Solution {
    public int[] prevSmaller(int[] A) {
        int n = A.length;
        int[] G = new int[n];
        Stack<Integer> stack = new Stack<>();
        
        for (int i = 0; i < n; i++) {
            // Pop elements from the stack that are greater than or equal to A[i]
            while (!stack.isEmpty() && stack.peek() >= A[i]) {
                stack.pop();
            }
            
            // If stack is empty, no smaller element found
            if (stack.isEmpty()) {
                G[i] = -1;
            } else {
                // The top of the stack is the nearest smaller element
                G[i] = stack.peek();
            }
            
            // Push the current element onto the stack
            stack.push(A[i]);
        }
        
        return G;
    }
}

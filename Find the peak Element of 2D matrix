class Solution {
    public int[] findPeakGrid(int[][] A) {
        int L = 0;
        int R = A[0].length-1;

        while(L<=R) {
            int midCol = (L+R)/2;
            int rowWithMaxEle = maxEleInCol(A,midCol); //returns the index
            int ele = A[rowWithMaxEle][midCol];
            
            int leftEle = -1;
            int rightEle = -1;
            
            if(midCol>0) {
                leftEle = A[rowWithMaxEle][midCol-1];
            }
            if(midCol<A[0].length-1) {
                rightEle = A[rowWithMaxEle][midCol+1];
            }

            if(ele>leftEle && ele>rightEle) {
                return new int[]{rowWithMaxEle,midCol};
            }
            else if(leftEle>ele) {
                R=midCol-1;
            }
            else if(rightEle>ele) {
                L = midCol+1;
            }
        }

        return null;
    }

    public static int maxEleInCol(int[][] A,int midCol){
        int max = 0;
        int rowWithMaxEle = -1;
        for(int i=0;i<A.length;i++) {
            if(A[i][midCol]>max) {
                max = A[i][midCol];
                rowWithMaxEle = i;
            }
        }

        return rowWithMaxEle;
    }
}

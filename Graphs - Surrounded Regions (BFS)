import java.util.LinkedList;
import java.util.Queue;

class Solution {
    public void solve(char[][] board) {
        int m = board.length;
        int n = board[0].length;
        Queue<rowCol> queue = new LinkedList<>();
        // Add 'O's on the border to the queue
        //later from these Os, we will start BFS simultaneously
        for (int i = 0; i < m; i++) {
            if (board[i][0] == 'O')
                queue.offer(new rowCol(i, 0));
            if (board[i][n - 1] == 'O')
                queue.offer(new rowCol(i, n - 1));
        }
        for (int j = 0; j < n; j++) {
            if (board[0][j] == 'O')
                queue.offer(new rowCol(0, j));
            if (board[m - 1][j] == 'O')
                queue.offer(new rowCol(m - 1, j));
        }

        while (queue.size() != 0) {
            int len = queue.size();
            for (int i = 0; i < len; i++) {
                rowCol cur = queue.poll();
                int r = cur.r;
                int c = cur.c;
                board[r][c] = '#';

                // left
                if (c - 1 >= 0 && board[r][c - 1] == 'O') {
                    queue.offer(new rowCol(r, c - 1));
                }
                // up
                if (r - 1 >= 0 && board[r - 1][c] == 'O') {
                    queue.offer(new rowCol(r - 1, c));
                }
                // right
                if (c + 1 < n && board[r][c + 1] == 'O') {
                    queue.offer(new rowCol(r, c + 1));
                }
                // dowm
                if (r + 1 < m && board[r + 1][c] == 'O') {
                    queue.offer(new rowCol(r + 1, c));
                }
            }
        }

        //our goal is to make the Os surrounded by X as X
        //The Os which are connected to border, will remain as O only (we have made these as #)
        //so convert all Os to X and all #s to Os

        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(board[i][j]=='O'){
                    board[i][j]='X';
                }
                else if(board[i][j]=='#'){
                    board[i][j]='O';
                }
            }
        }
    }

    public static class rowCol {
        int r;
        int c;

        public rowCol(int r, int c) {
            this.r = r;
            this.c = c;
        }
    }
}

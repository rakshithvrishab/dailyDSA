class Solution {
    public int search(int[] A, int k) {
        int n=A.length;
        if (n == 1) {
            return A[0] == k ? 0 : -1;
        }
        int S = 0;
        int E = n-1;
        while(S<=E){
            int mid = (S+E)/2;
            if(A[mid]==k) {
                return mid;
            }
            else if(A[S]<=A[mid]) { //first half is sorted
                if(A[S]<=k && k<=A[mid]) { //k exists in 1st half range
                    E=mid-1;
                }
                else{ //k exists in 2nd half
                    S=mid+1;
                }
            }
            else if(A[mid]<=A[E]) { //2nd half is sorted
                if(A[mid]<=k && k<=A[E]){//check if k exists in this range
                    S=mid+1;
                }
                else{
                    E=mid-1;
                }
            }
        }
        return -1;
    }
}

//TC: O(Log N)
//SC: O(1)

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ans = new ArrayList<>();
        if(root==null) return ans;
        Queue<TreeNode> que = new LinkedList<>();
        que.offer(root);
        boolean lefToRyt = true;
        while(que.size()!=0) {
            int n = que.size();
            List<Integer> tmp = new ArrayList<>();
            
            for(int i=0;i<n;i++) {  //iterate over the nodes added in 1 batch
                TreeNode cur = que.poll();
                tmp.add(cur.val);
                if(cur.left!=null) {
                    que.offer(cur.left);
                }
                if(cur.right!=null) {
                    que.offer(cur.right);
                }
            }
            if(lefToRyt) {
                ans.add(new ArrayList<>(tmp));
            }else{
                Collections.reverse(tmp);
                ans.add(new ArrayList<>(tmp));
            }
            lefToRyt = lefToRyt^true;  //toggle back
        }

        return ans;
    }
}


public class Solution {
    public ArrayList<Integer> solve(TreeNode A) {
        //LOGIC: print the 1st element of each level
        //So first insert right child and then left child to 
        //queue when we remove a parent from queue
        ArrayList<Integer> ans = new ArrayList<>();
        if(A==null) return ans;
        Queue<TreeNode> que = new LinkedList<>();
        que.offer(A);
        TreeNode first = A;
        TreeNode cur = null;

        while(que.size()!=0) {
            TreeNode tmp = que.poll();

            if(tmp.right!=null) {
                que.offer(tmp.right);
                cur=tmp.right;
            }
            if(tmp.left!=null) {
                que.offer(tmp.left);
                cur=tmp.left;
            }

            if(tmp==first) {
                ans.add(tmp.val);
                first = cur;
            }
        }
        return ans;
    }
}

//TC:  O(N) SC: O(N)
